// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MyApp.Db;
using System;

namespace MyApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180520085617_ChangedUserFieldLengths")]
    partial class ChangedUserFieldLengths
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("MyApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("UserId");

                    b.HasIndex("CountryCode", "Mobile")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyApp.Models.UserProfile", b =>
                {
                    b.Property<int>("UserProfileId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FullName");

                    b.Property<string>("MyProperty");

                    b.Property<int>("UserId");

                    b.HasKey("UserProfileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("MyApp.Models.UserProfile", b =>
                {
                    b.HasOne("MyApp.Models.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("MyApp.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
